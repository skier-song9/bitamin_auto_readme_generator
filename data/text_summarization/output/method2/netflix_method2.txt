<subject>Netflix Stock Price Prediction with News Topic & Sentiment</subject>

<index>01 INTRODUCTION</index>

<main>01 INTRODUCTION</main>

<sub>11 Background of topic selection</sub>
<content>주가 변동에 뉴스의 영향을 탐구하고자 하며, 뉴스 감성 분석 및 토픽 모델링 결과를 사용하여 주가를 예측하려는 목적입니다. 대부분의 뉴스 기사는 한 기업에 대해 보도하고 있어 한 개의 주식 종목을 예측 대상으로 정했습니다.</content>

<sub>12 Brief Project Introduction</sub>
<content>뉴스 데이터를 활용한 주가 예측 모델의 최적화 및 효율적인 파라미터 선정을 목표로 삼고 있으며, 장기적인 추세 예측에 효과적인 모델을 실험하고 뉴스 감성 분석과 토픽 모델링의 유용성을 검토합니다.</content>

<sub>13 Data collection</sub>
<content>FinanceDataReader를 사용하여 2018년 1월 2일부터 2023년 12월 29일까지의 넷플릭스 주가 데이터를 수집했습니다. Stock News API를 활용하여 같은 기간 동안의 넷플릭스 관련 뉴스 데이터를 수집했습니다.</content>

<main>02 DATA PREPROCESSING</main>

<sub>21 Make derived Variable</sub>
<content>RocRange Of Change, Moving Average 등의 파생 변수를 생성했습니다. 생성된 파생 변수의 첫 시점은 NaN 상태로, 2018년 데이터를 추가로 수집해 활용했습니다.</content>

<sub>22 Add indicators</sub>
<content>기술 분석 라이브러리를 사용해 다양한 기술 지표를 추가했습니다. 예를 들어, Bollinger Bands, Keltner Channel, Moving Average 등이 포함됩니다.</content>

<sub>23 Peer Analysis Add similar stock price</sub>
<content>핀터레스트, 메타플랫폼스, 스포티파이의 주가 데이터를 추가하여 넷플릭스와 유사한 사업을 영위하는 기업들의 해당 기간 종가를 feature로 추가했습니다.</content>

<sub>24 Remove multicollinearity</sub>
<content>기본 지표들과 1에 가까운 상관관계를 가지는 보조 지표들을 제거했습니다. Peer stock은 유지했습니다.</content>

<sub>25 Make derived variable for News Topics & Sentiment</sub>
<content>뉴스 데이터의 영향을 측정하기 위해 감성분석과 토픽 모델링의 결과를 파생 변수로 추가했습니다.</content>

<main>03 MODELING</main>

<sub>31 Time Series</sub>
<content>시간에 따른 데이터 패턴을 분석하여 미래 값을 예측합니다. Sequence Length와 Predict Size를 설정하여 고정된 Window Size를 사용합니다.</content>

<sub>32 Modeling</sub>
<content>주가 예측 모델로 LSTM, GRU, Transformer를 선택하여 실험했습니다. 각 모델의 파라미터를 조정하여 예측의 유의미성을 검토했습니다.</content>

<main>04 CONCLUSON AND IMTATION</main>

<sub>41 Evaluation</sub>
<content>시계열 모델의 손실함수로 RMSE를 선택했습니다. 뉴스 데이터가 예측에 유의미한 영향을 주는지를 검토했습니다.</content>

<sub>42 Select target variable</sub>
<content>종가(Close)보다 ROC를 Target으로 설정하는 것이 추세 반영이 잘되는 것을 확인했습니다.</content>

<sub>43 Model Result</sub>
<content>각 모델의 RMSE 손실 값을 비교했습니다. LSTM 모델의 손실 평균값이 가장 작으며, Transformer 모델의 손실 평균값이 가장 큽니다.</content>

<sub>44 Compare each parameter</sub>
<content>Sequence_size와 Batch-size는 값이 작을수록 유의미한 결과를 나타냈습니다. LSTM과 Transformer는 Model Size 64에서, GRU는 128에서 유의미한 결과를 보였습니다.</content>

<sub>45 Best parameter for each model</sub>
<content>각 모델별 최적의 파라미터 조합을 선정하여 50번 반복 후 평균값으로 경향성과 오차율을 파악했습니다. 예를 들어, LSTM은 stock-only 데이터셋의 seq 30, batch 64에서 평균 오차율 185%를 보였습니다.</content>
